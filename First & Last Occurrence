34. Find First and Last Position of Element in Sorted Array
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value

Example 1:
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Example 2:
Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]

Example 3:
Input: nums = [], target = 0
Output: [-1,-1]

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int First = findFirst(nums, target); 
        if(First ==-1) return new int[]{-1, -1}; 
        int Last = findLast(nums,target); 
        return new int[]{First, Last}; 
    }
    private static int findFirst(int[] nums, int target) {
        int start = 0 ; 
        int end = nums.length-1; 
        int res= -1; 
        while(start<=end){
            int mid = start + end- start/2; 
            if(nums[mid]== target){
                res= mid; 
                end = mid-1; 
            }
            else if(nums[mid]<target){
                start = mid+1; 
            }
            else{
                end = mid -1 ; 
            }
        }
        return res; 
    }
      private static int findLast(int[] nums, int target) {
        int start = 0 ; 
        int end = nums.length-1; 
        int res= -1; 
        while(start<=end){
            int mid = start + end- start/2; 
            if(nums[mid]== target){
                res= mid; 
                start = mid+1; 
            }
            else if(nums[mid]<target){
                start = mid+1; 
            }
            else{
                end = mid -1 ; 
            }
        }
        return res; 
    }
}
